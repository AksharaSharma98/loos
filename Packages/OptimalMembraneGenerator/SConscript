#!/usr/bin/env python3
#  This file is part of LOOS.
#
#  LOOS (Lightweight Object-Oriented Structure library)
#  Copyright (c) 2014, Tod D. Romo, Grossfield Lab
#  Department of Biochemistry and Biophysics
#  School of Medicine & Dentistry, University of Rochester
#
#  This package (LOOS) is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation under version 3 of the License.
#
#  This package is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.


import sys
import os

Import('env')
if env.USING_CONDA:
    python_lib_path = list(filter(lambda x: x.endswith("site-packages"),
                           sys.path))[0]
    PREFIX = python_lib_path + '/loos/OptimalMembraneGenerator/'
else:
    PREFIX = env['PREFIX'] + '/OptimalMembraneGenerator/'

executables = 'LipidLibrary.py NAMD.py OptimalMembraneGenerator.py ' + \
              'ParseOptions.py PSFGen.py WaterBox.py solvate.py ' + \
              'add_molecules.py make_library.py'
files = 'water_small.pdb'
dirs = 'doc example'

omg_package = []
# Only install if pyloos is being built (i.e. pyloos=1 on command line)

if int(env['pyloos']):
    # Executables and dir have same perms, so group together...

    for f in Split(executables + ' ' + dirs):
        Command(PREFIX + f, f, [
                Copy("$TARGET", "$SOURCE"),
                Chmod("$TARGET", 0o755)
                ])

    for d in Split(files):
        Command(PREFIX + d, d, [
                Copy("$TARGET", "$SOURCE"),
                Chmod("$TARGET", 0o644)
                ])

    # If we're using conda, also put the executables in bin
    if env.USING_CONDA:
        PREFIX = env['PREFIX'] + "/bin/"

        for f in Split(executables):
            Command(PREFIX + f, f, [
                    Copy("$TARGET", "$SOURCE"),
                    Chmod("$TARGET", 0o755)
                    ])

        # Make the symlink to omg.py, if it doesn't already exist
        omg_name = os.path.join(PREFIX, "omg.py")
        omg_fullname = os.path.join(PREFIX, "OptimalMembraneGenerator.py")
        if os.path.exists(omg_name):
            if os.path.samefile(omg_name, omg_fullname):
                # symlink exists, and points to the right thing, so we
                # don't need to
                print("correct omg.py symlink already exists")
            else:
                print("omg.py shortcut exists, but points to ", omg_name)
                print("It should point to ", omg_fullname)
                print("I won't delete it, but you should check on it")
        else:
            # symlink doesn't exist, create it
            os.symlink(omg_fullname, omg_name)
    else:
        # TODO: need to install the omg.py symlink here
        pass


# dummy return...
Return('omg_package')
