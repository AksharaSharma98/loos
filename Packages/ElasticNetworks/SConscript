#!/usr/bin/env python
#  This file is part of LOOS.
#
#  LOOS (Lightweight Object-Oriented Structure library)
#  Copyright (c) 2009 Tod D. Romo
#  Department of Biochemistry and Biophysics
#  School of Medicine & Dentistry, University of Rochester
#
#  This package (LOOS) is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation under version 3 of the License.
#
#  This package is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.



import sys

Import('env')

clone = env.Clone()
clone.Prepend(LIBS = ['loos'])

apps = 'gnm enmovie flucc2b psf-masses heavy-ca eigenflucc two-body-traj'
install_apps = apps + ' vsa anm'

list = []

for name in Split(apps):
    fname = name + '.cpp'
    prog = clone.Program(fname)
    list.append(prog)

PREFIX = env['PREFIX']


# Tools requiring a library...

loos_enm = clone.Library('loos_enm', ['spring_functions.cpp', 'enm-lib.cpp', 'vsa-lib.cpp'])
clone.Prepend(LIBS=['loos_enm'])
clone.Prepend(LIBPATH=['#/Packages/ElasticNetworks'])



vsa = clone.Program('vsa.cpp')
list.append(vsa)

anm = clone.Program('anm.cpp')
list.append(anm)

vsa_fit = clone.Program("vsa_fit", ["vsa_fit.cpp", "fitter.cpp"])
list.append(vsa_fit)

nickanm = clone.Program("nickanm", ["nickanm.cpp"])
list.append(nickanm)

vsa_fit_bonds = clone.Program("vsa_fit_bonds", ["vsa_fit_bonds.cpp", "fitter.cpp"])
list.append(vsa_fit_bonds)


enm_tools = env.Install(PREFIX + '/bin', Split(install_apps))
enm_libs = env.Install(PREFIX + '/lib', [loos_enm])
enm_headers = env.Install(PREFIX + '/include', Split('anm-lib.hpp enm-lib.hpp spring_functions.hpp vsa-lib.hpp'))
env.Alias('elastic_networks_package', enm_tools + enm_libs + enm_headers)

Return('list')
