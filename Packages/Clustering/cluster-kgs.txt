usage:
kgsclus < similarity_scores.asc > clustering_results.yaml

kgsclus mimics the clustering aspect of the NMRCLUST utility that is incorporated as part of the OLDERADO webserver for structural biology informatics. It was originally published as:
Kelly, Gardner, and Sutcliffe, Prot. Eng. 9 11 1063-1065 (1996)
This type of clustering exists in other places, most notably in R, and has been put to many uses beside clustering protein structures with their RMSD as the distance between each structure. It is called kgsclus because this method is referred to in other contexts (that is, where it is not being used to analyze NMR ensembles) as kgs clustering, and because this executable operates on a provided similarity matrix it is similarly flexible.

The tool works by reading in a similarity score matrix from stdin and writing the clustering results to stdout. The results report the index of each cluster, with all the elements in each cluster following its index on the same line. It will also provide an exemplar (the element nearest the centroid) for each cluster in a separate block. The input matrix should be an NxN symmetric matrix of similarity scores where the ij-th element is the similarity between datum i and datum j. The similarity score matrix is expected to be whitespace delimited in the column and newline delimited in the row. '#' is an acceptable comment character, but only produces a comment-read at the beginning of a line (not at any point in a line, like a comment in a shell script).

In order to mimic the functionality of the kgsclus tool mentioned above, one can use the loos tool rmsds (or similar) to produce the matrix of similarity scores. 
For example: 
rmsds model.pdb ensemble.dcd | kgsclus > clustering_results.yaml

would use rmsds to compute the alpha carbon RMSDs from the frame-pairs in ensemble.dcd to generate the similarity matrix, then redirect it to kgsclus, then write the clustering results to an output file. Note that in this particular command line the RMSD values emitted by rmsds will be in angstroms, and will be rounded to 2 digits. For more reported precision (rmsds uses doubles internally), use the '-p' flag. If you would like to both save the similarities generated in this way, but also not have them written to disk before feeding them to the clustering algorithm, you can use the unix utility tee. 
For example:
rmsds model.pdb ensemble.dcd | tee rmsds-out.asc | kgsclus > clustering_results.yaml

The output from the clustering will be structured as YAML, and will have two keys. One key will be a list of the clusters, where each cluster will be a list of integers in no particular order