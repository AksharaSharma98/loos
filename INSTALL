Building and Installing Loos
----------------------------

*** FOR THE IMPATIENT ***

= Fedora =

You will need to install SCons, lapack, atlas, and boost (the
developer's versions).  These can be easily installed using "yum".

   scons release=1
   sudo scons release=1 install

Or to install in a user-specified location:

   scons release=1 PREFIX=/path/to/install install



= Ubuntu =

You will need to install SCons, lapack, atlas, and boost (developer's
versions).  On some systems, the names of the boost libraries vary.
In these cases, you will need to use a custom configuration.  Copy
"custom.py-proto" to "custom.py" and edit it, commenting out the lines
marked for Ubuntu.  Alternatively, verify the names of the boost regex
and program_options libraries and set these appropriately in your
"custom.py" file.



= openSUSE =

There is no pre-built ATLAS package (that we could find) for
openSUSE.  LOOS will use the blas packages instead.  You will need to
install lapack, blas, boost, and SCons.  Then follow the directions
for Fedora above.




= MACOS X (10.4+) =

First, make sure you have the Developer's Tools (i.e. XCode)
installed.  You can find it on your MacOS X install disk or,
alternatively, you can sign up for a free account with the Apple
Developer's Connection and download the latest version.  Next, you
will need to install SCons and BOOST.  If all went well, you should be
able to cd to where you have the LOOS source and run "scons release=1".




*** GENERAL NOTES ***

There is some variability in the naming used for the Boost libraries.
If your build fails even though you just installed the latest Boost,
check the names of the regex and program_options libraries and set
these in your "custom.py" file.

If you're using a compiler in a non-standard location (e.g. you have
your own build of the latest and greatest gcc), SCons may not be using
it even though your $PATH is set correctly.  You can force which
compiler is used to build LOOS by setting the CXX variable in your
"custom.py" file.  You may also need to specify the "LIBXTRA" path...

SCons supports building LOOS in parallel.  If you have 4 cores, for
example, use "scons -j4" to use all 4 cores.

Prebuilt documentation for LOOS is provided as part of the
distribution.  This is simply copied into the install directory as
part of installation.  Should you want to build a new version of the
documentation, Doxygen is required.  Moreover, due to an issue we ran
into with SCons, documentation building and installation are
decoupled.  What this means is that you must explicitly build the docs
(i.e. "scons docs") and -then- install, "scons install".  Running
"scons install" will -not- rebuild the documentation, even if it out
of date (or nonexistent).
