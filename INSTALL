                                       LOOS COMPATIBILITY TABLE
                                       ------------------------

--------------------------------------------------                             
|    OS             |   LOOS    | PyLOOS | Notes |     ************** Symbols *****************
|-------------------|-----------|--------|--------                             
| Fedora 12         |     +     |   !    | DS    |     + = Supported (dependencies easily
| Fedora 13         |     +     |   !    | DS    |         available via package manager)
| Fedora 14         |     +     |   +    | D     |                             
| Fedora 15         |     +     |   +    | D     |     ! = Supported with reservations
| Fedora 16         |     +     |   +    | D     |         (may require manual installations)
| Fedora 17         |     +     |   +    |       |    
| Fedora 18         |     +     |   +    |       |     - = Unsupported
| Fedora 19         |     +     |   +    |       |                             
| Fedora 20         |     +     |   +    |       |
| Fedora 21         |     +     |   +    |       |
| Fedora 22         |     +     |   +    |       |
|-------------------|-----------|--------|-------|     B = Requires manual install of Boost
| Ubuntu 8.04 LTS   |     !     |   !    | DBCS  |                             
| Ubuntu 10.04 LTS  |     +     |   !    | DCS   |     C = Requires manual install of SCons
| Ubuntu 11.10      |     +     |   !    | DS    |     
| Ubuntu 12.04 LTS  |     +     |   +    |       |     S = Requires manual install of Swig
| Ubuntu 12.10      |     +     |   +    | D     |     
| Ubuntu 13.04      |     +     |   +    | D     |
| Ubuntu 14.04 LTS  |     +     |   +    |       |
| Ubuntu 15.04      |     +     |   +    |       |
|-------------------|-----------|--------|-------|     D = Deprecated platform        
| Debian 5          |     !     |   -    | DB    |         We are no longer testing these
| Debian 6          |     +     |   !    | S     |         configurations, however, they may
| Debian 7.7        |     +     |   +    |       |         still work...
| Debian 8          |     +     |   +    |       |
|-------------------|-----------|--------|-------|                             
| CentOS 5.9        |     !     |   !    | DBCS  |     T = Tested, but not directly supported
| CentOS 6.4        |     +     |   !    | CS    |         (i.e. you're own your own for
| CentOS 7          |     +     |   !    | C     |         installing required packages)
|-------------------|-----------|--------|-------|
| OpenSUSE 11.4     |     !     |   -    | DC    |                             
| OpenSUSE 12       |     !     |   +    | C     |                             
| OpenSUSE 13       |     +     |   +    |       |
|-------------------|-----------|--------|-------|                             
| FreeBSD 8         |     +     |   -    | D     |                             
|-------------------|-----------|--------|-------|                             
| Manjaro 0.8       |     +     |   +    | T     |                             
|-------------------|-----------|--------|-------|                             
| Mint 17           |     +     |   +    | T     |                             
|-------------------|-----------|--------|-------|                             
| Slackware 14.1    |     +     |   +    | T     |                             
|-------------------|-----------|--------|-------|                             
| Windows XP        |     +     |   -    | D     |                             
|  +Cygwin 1.7.7    |           |        |       |                             
| Windows 7 64-bit  |     +     |   -    | D     |                             
|  +Cygwin 1.7.15-1 |           |        |       |                             
|-------------------|-----------|--------|-------|                             
| MacOS 10.6        |     +     |   !    | D     |                             
| MacOS 10.7        |     +     |   !    | D     |                             
| MacOS 10.8        |     +     |   !    | D     |                             
| MacOS 10.9        |     +     |   !    | BCS   |                             
|-------------------|-----------|--------|-------|                             



				   
		     Building and Installing Loos
		     ----------------------------
		      *** FOR THE IMPATIENT ***



		     = Building and Installing =

LOOST requires BOOST 1.36 or higher, SCons, and Atlas/LAPACK.  Please
refer to the OS-specific instructions below for more details.

LOOS can then be built using the following command:

   scons

Or installed (to /opt as a default):
   sudo scons install

To install in a user-specified location:

   scons PREFIX=/path/to/install install

To use LOOS, your environment must be first setup:
  (bash)   source /path/to/loos/setup.sh
  (tcsh)   source /path/to/loos/setup.csh



* Build Targets *

      core	LOOS Library and PyLOOS
      docs	Rebuild documentation
      tools	LOOS Library, Tools, and PyLOOS
      all	LOOS Library, Tools, PyLOOS, and all Packages (default)
      install	Install library, tools, PyLOOS, and all Packages

* Available Packages (also build targets) *
 
      ENM	Elastic Network Models
      HBonds	Hydrogen Bonds Analysis
      Conv	Convergence Analysis
      Density	Density/3D Histogram Tools
      User	User-created tools
      Python	PyLOOS scripts

			     = PyLOOS =

The Python interface to LOOS is currently a beta-release.  It will be
included in the build if you have a recent SWIG (version 2.0 or
better) in your standard path.  Not all operating systems and versions
are supported.  If you need to disable the automatic building of
PyLOOS, use the pyloos flag to scons:

	scons pyloos=0

To build only the core LOOS libraries and PyLOOS, use the following
command:

	scons core


Note that the Optimal Membrane Generator requires PyLOOS.  If you
do not have SWIG installed or disable PyLOOS support, then the OMG
will not be installed.


		    = NetCDF Amber Trajectories =

LOOS now supports a subset of the Amber NetCDF convention 1.0-B.  Only
coordinates are retrieved and are converted into the default LOOS data
type (i.e. doubles).  Periodic boxes are assumed to be orthogonal and
the angles are currently ignored.

If the netcdf libraries are installed, these will be automatically
detected by SCons and included in the build.  When opening an amber
trajectory file, LOOS will determine if it is a NetCDF file or an
ASCII MDCRD file and act appropriately.

If the netcdf libraries and headers are installed in a non-standard
location, set the NETCDF variable in your custom.py file to point to
the installation.  The specific include and library directories can be
set using the NETCDF_INCLUDE and NETCDF_LIBPATH variables
respectively, and the libraries linked against can be specified using
the NETCDF_LIBS variable.


			      = Boost =

LOOS requires Boost version 1.36 or more recent.  To explicitly
specify an install location, set the BOOST variable in your custom.py
file or on the command line:

	 scons BOOST=/usr/local/boost_1_54_0

In some cases, you may need to override either the include directory
or the library directory.  The BOOST_INCLUDE and BOOST_LIBPATH variables
will specify the corresponding directories for the LOOS build.  You
may also explicitly specify which libraries to link against with the
BOOST_LIBS variable.  See custom.py-proto for examples.



		  = Parallel (Multithreaded) ATLAS =

If you have a full install of ATLAS including threaded versions of the
BLAS and LAPACK, you can link against these to take advantage of
multiple cores in LOOS.  Copy the custom.py-proto to custom.py and
uncomment/change the appropriate lines.

The MacOS version by default uses the vecLib framework which is
already multithreaded.


========================================================================


			------= Fedora =------

LOOS has been tested on Fedora (64-bit).  We assume you already have
the basic compiler tools installed (i.e. g++).  You will need to
install scons, boost, and atlas:

sudo yum install scons boost-devel atlas-devel

[optional]
For Amber NetCDF support, also install the netcdf development package:

sudo yum install netcdf-devel


* PyLOOS *

Fedora 14-22: Yum install python-devel and swig

Fedora 13: Yum install pcre-devel and python-devel, then download and install
  swig-2.0.4 (or later).

Fedora 12: Install pcre-devel and download and build the latest swig
  (2.0.4 or later).




=======================================================================



			------= CentOS =------

LOOS has been tested with CentOS (64 bit).  Follow the instructions
for Fedora, however there is no scons package available via yum.
Instead, download and install any version of scons more recent than
1.0.


* PyLOOS *

CentOS 5, 6: Yum install python-devel and pcre-devel, then download
  and install the latest swig.

=======================================================================


			------= Ubuntu =------

LOOS has been tested on Ubuntu 8-15.  The following instructions have
been used to install LOOS on a fresh 64-bit 14.04 installation.  Use
the Ubuntu software center (or apt-get) to install the following
packages:
	g++ (GNU C++ compiler)
	scons (replacement for make)
	libboost-all-dev [or libboost-all-devel] (Boost C++ Libraries development files (ALL))
	libatlas-dev (Automatically Tunes Linear Algebra Software, C Header Files)
	libatlas-base-dev (Automatically Tuned Linear Algebra Software)
	libnetcdf-dev [optional] (Development kit for Netcdf)

* Ubuntu 12.10 *

On the test installation, there was a warning on installing boost.  It
was necessary to click on "Repair" twice before boost was successfully
installed.

* Ubuntu 10.04 LTS *

Ubuntu 10.04 LTS uses libboost1.40-all-dev instead of
libboost-all-devel for a package name.  The version of scons available
through the package manager is too old.  Download and install a recent
scons (2.0 or better)

* Ubuntu 8.04 LTS *

Do not install scons using the package manager--the available version
is incompatable with LOOS.  Instead, download any version >= 1.0 and
install that.  Also, there is no boost-all package, so you must
install the components separately: libboost-dev, libboost-regex-dev,
and libboost-program-options-dev




* PyLOOS *

Ubuntu 12.04 LTS & 12.10: Install swig using software center or apt-get.

Ubuntu 11.10 & 10.04 LTS: PyLOOS requires a very recent version of
  SWIG.  While it may appear that the swig 2.0.4 is available through
  the synaptics package manager, it is really 1.3.40 and will not work
  with PyLOOS.  First install the libpcre-dev, then download, build,
  and install the latest version of swig.


Ubuntu 8.04 LTS: Install python-dev and follow the instructions above.

=======================================================================


			------= Debian =------

Using the synaptic manager (or apt-get), install the following packages:
      libboost-all-dev [or libboost-dev for some older debians]
      scons
      libatlas-base-dev
      libatlas-headers [May be required for Debian 5]
      libnetcdf-dev [optional]

Debian 5: LOOS requires boost 1.36 or higher, but the default version
          for Debian 5 is 1.34.  You will need to manuall download and
	  install a recent version of BOOST prior to building LOOS.
	  A custom.py file will also be necessary to point the build
	  to the alternate version of BOOST.

* PyLOOS *

Debian 5: NOT SUPPORTED
Debian 6: Install libpcre-dev and python-dev, then *download* and
  install the latest swig.
Debian 7: Install python-dev, and swig

=======================================================================

		       ------= openSUSE =------

As of OpenSUSE 13, there is a pre-build ATLAS package available.  However,
it does not include all of the LAPACK functions LOOS requires.  At this time,
we recommend only installing lapack and blas.  If you install ATLAS, it will
be ignored by the LOOS build.

Using zypper (or your favorite package manager), install the following:

   zypper install scons boost-devel lapack-devel blas-devel

You should get the blas as a dependency for lapack.  You may also have lapack3
installed by default, however we've found that lapack must also be installed
in order to build LOOS.

* OpenSUSE 11 & 12 *

The package-manager installed scons is too old.  Download and install SCons
2.0 or better.

[Optional]
For Amber NetCDF trajectory support, install the netcdf development package,
   zypper install libnetcdf-devel


* PYLOOS *

OpenSUSE 12.1: zypper install python-devel swig
OpenSUSE 11.4: NOT SUPPORTED

=======================================================================

			-----= MACOS X =-----

***IMPORTANT NOTES REGARDING MACOS 10.9***

MacOS 10.9 requires LOOS 2.1 or more recent.  We have also discovered
an incompatibility with Boost installed via Fink in MacOS 10.9.  You
will need to manually download and build a recent version of Boost and
*NOT* use the Fink version.

There is an issue with using Swig and a recent version of MacOS 10.9 that
affects how STL containers are wrapped.  We have disabled the wrapping of
iterator methods for MacOS 10.9 only in order to build PyLOOS.  This means
functions such as begin() and erase() will be unavailable in PyLOOS for
the vectors used in LOOS.

----------------------------------------


First, make sure you have the Developer's Tools (i.e. XCode)
installed.  XCode is available for free through the Mac App store.
Next, you will need to install SCons (http://scons.org) and Boost
(http://boost.org) by visiting their websites, downloading the
software, and following their installation instructions.
Alternatively, use fink to install these packages.

* NetCDF *

Download and install the latest hdf5 and netcdf libraries.  If
necessary, set the NETCDF_INCLUDE and NETCDF_LIBPATH variables in your
custom.py file to point to where netcdf is installed.

* PyLOOS *

You will need to download and install a recent version of SWIG first.
If you have installed Boost in a non-standard location, you will need
to make sure that the boost libraries are in your DYLD_LIBRARY_PATH
environment variable.

***MACOS BUILD PROBLEMS***

We have seen several instances where LOOS would not build due to
multiple versions of BOOST being installed.  The configuration part of
the build seems to mix components from the different versions
installed.  If your build exits due to errors, verify that you are in
fact using only the BOOST install and libraries you intend (or removed
the excess versions)


=======================================================================


			 -----= CYGWIN =-----
			    (UNSUPPORTED)

You will need to install libboost-devel and liblapack-devel along with
the g++ compiler using the cygwin setup.exe program.  (Note: if loos
still does not build, try installing the additional lapack and boost
packages).  There is no atlas package that we could find for cygwin,
so the native lapack/blas will be used instead.

There is no scons install option from setup.exe, so you need to
manually download the latest scons distribution from
http://www.scons.org/download.php (the gzip tar file) and install it.

There is an issue with SCons under cygwin where you must first build
LOOS and -then- install it, i.e.
     scons
     scons PREFIX=/path/to/install/loos install

[Optional]
To include support for Amber/NetCDF trajectory files, install the
libnetcdf-devel library using the cygwin setup.exe installer.


* PyLOOS *

Cygwin is NOT SUPPORTED

=======================================================================


			-----= FreeBSD =-----
			    (UNSUPPORTED)

LOOS has been tested with FreeBSD 8.  You will need to install the gcc
suite, atlas, scons, and boost by whatever means you prefer (note:
LOOS was tested using the versions installed via ports).

* PyLOOS *

FreeBSD is NOT SUPPORTED

=======================================================================

			-----= Manjaro =-----
			    (UNSUPPORTED)

LOOS has been tested with Manjaro 0.8.10.  
Make sure scons, boost, lapack, python, and swig are installed.  Also
install NetCDF, if you want NetCDF support.  LOOS and PyLOOS should build.

========================================================================

			-----= Slackware =-----
			    (UNSUPPORTED)

LOOS has been tested with Slackware 14.1.  You will need to install,
by whatever means you prefer, lapack, blas, and scons.  LOOS and PyLOOS
should then build.



========================================================================


			*** GENERAL NOTES ***

* Customizing the Build *

You can override the paths SCons will use for both libraries and
include files by setting the appropriate variables in a "custom.py"
file.  For example, to control where the Boost include files are
located, set the BOOST_INCLUDE variable.

You can also control what libraries are linked against by setting the
appropriate _LIBS variable in your custom.py file.  For example, if
your Boost libraries have a naming convention that the LOOS SConstruct
cannot figure out, you can explicitly set the libraries using the
BOOST_LIBS variable.  These variables take a space-separated list of
library names.  It is important to have *all* required libraries
included in this list.  So for Boost, this would include the regex,
program_options, thread, and system libraries.


If you're using a compiler in a non-standard location (e.g. you have
your own build of the latest and greatest gcc), SCons may not be using
it even though your $PATH is set correctly.  You can force which
compiler is used to build LOOS by setting the CXX variable in your
"custom.py" file.

Note: Settings in the custom.py file can be overridden using the
command-line and the shell environment.  

SCons supports building LOOS in parallel.  If you have 4 cores, for
example, use "scons -j4" to use all 4 cores.

Prebuilt documentation for LOOS is provided as part of the
distribution.  This is simply copied into the install directory as
part of installation.  Should you want to build a new version of the
documentation, Doxygen is required.  Moreover, due to an issue we ran
into with SCons, documentation building and installation are
decoupled.  What this means is that you must explicitly build the docs
(i.e. "scons docs") and -then- install, "scons install".  Running
"scons install" will -not- rebuild the documentation, even if it out
of date (or nonexistent).
