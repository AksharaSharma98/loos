2008-12-22    <tromo@spade.biophysics.rochester.edu>

	* Changed matrix code to disable sparse matrices for MacOS X and
	XCode 2.5 (and earlier).  There is an issue with
	tr1::unordered_map that will cause the build to break.  You can
	build your own GCC to avoid this problem if you want to use the
	sparse matrix policy.  This does NOT affect any linux system we've
	tested...

2008-12-18  Tod Romo  <tromo@gorgoneion>

	* Fixed moderately severe bug when reading Amber trajectories by
	using readFrame(i) rather than readFrame().

2008-12-18    <tromo@spade.biophysics.rochester.edu>

	* Changed loos::createSystem() so that it will automatically look
	for a coordinate file if passed an Amber prmtop file.  If found,
	it will load those coordinates in.

2008-12-17    <tromo@spade.biophysics.rochester.edu>

	* Changed PDB output to allow for >= 100000 atoms/residues.  The
	catch is that this is a hack and will exclude altloc/chainid
	info.  However, the output PDBs are readable by pymol...

	* Matrix output now uses a formatting functor so you can adjust
	the output precision, or do whatever you want to with it...

	* Added tool for torsion timeseries (alan)

	* Changed AtomicGroup::splitByMolecule() to automatically sort
	each returned AtomicGroup...this solves a problem when use
	splitByMolecule() and then try to match the molecules with a DCD
	that's being written.
	

	

2008-12-12    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in AtomicGroup::PrincipalAxes() where coord array was
	deleted incorrectly...

2008-12-09    <tromo@spade.biophysics.rochester.edu>

	* Moved ALMOST everything into loos namespace, save for the
	lexer.
	* Fixed problem with SCons not regenerating lex/yacc output
	properly with the reparse=1 option
	* Removed top-level typdefs for uint/ulong (assuming they're part
	of the default set of typedefs)
	* Changed the SConstruct so that it tests for ulong/uint and
	defines appropriate flags for loos.  This is in case your system
	doesn't define one or the other.

2008-12-08    <tromo@spade.biophysics.rochester.edu>

	* Moved most of the internal classes/routines related to the
	parsing system into the loos::internal namespace.

2008-12-05  Tod Romo  <tromo@gorgoneion-w>

	* Moved Matrix classes into loos::Math namespace

2008-12-05  Tod Romo  <tromo@gorgoneion.urmc-sh.rochester.edu>

	* Added a new matrix class
	* Changed matrix IO to use the new templated function calls rather
	than the polymorphic writer/reader classes.
	* Removed injection of boost namespace into top-level by LOOS
	* Changed ensemble functions to take a pTraj (pointer to a
	trajectory) rather than a reference to a Trajectory object.
	* Added boost_program_options to the libs that must be linked
	against (and in the custom.py-proto)
	* Changed the svd tool to always write the map out, and the
	default naming scheme has been changed slightly (it will default
	to the base-name of the input trajectory unless you explicitly
	specify a prefix).
	

2008-12-04    <tromo@spade.biophysics.rochester.edu>

	* Changed Tools/aligner to write out the average structure as the
	PDB corresponding to the aligned DCD rather than just taking the
	first frame of the trajectory.

2008-11-25    <tromo@spade.biophysics.rochester.edu>

	* Changed AtomicGroup::splitByMolecule() to short-circuit if the
	group has no bond connectivity and return a vector with the entire
	group as its only member.
	* Changed Tools/reimage-by-molecule to be more generic in what
	types of files it will take.  Since you could now give it a file
	without connectivity, it detects this and warns the user...
	* Added subsetter tool to pull out a subset from a trajectory.

2008-11-21    <tromo@spade.biophysics.rochester.edu>

	* Changed BadConnectivity exception to inherit from runtime_error.
	Now accepts a string to stick into what().
	* Changed CONECT record reading to use fixed field widths
	* Changed PDB read code to keep track of what unknown records have
	been seen, so warnings are only emitted once for each unique
	unknown record.

2008-11-03    <alan@spade.biophysics.rochester.edu>

	* Fixed bug in crossing-waters tool where the entry side of the
	water was never set.

2008-10-31    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in Atom::clearPropertyBit() that caused it to
	incorrectly toggle other bits (and not always clear the bit it
	meant to).  This primarily affected the aligner tool.

2008-10-27    <tromo@spade.biophysics.rochester.edu>

	* Changed the internal has used in LOOS from SGI's hash_set to
	tr1::unordered_set.  This means that any code that relied on loos
	automatically included ext/hash_set will now need to either switch
	to using the tr1 equivalent, or explicitly include the hash_set
	header...

2008-10-23  Tod Romo  <tromo@gorgoneion.urmc-sh.rochester.edu>

	* Added helix_kink tool
	* Fixed problem with PDB output with 10,000 residues or more
	* Fixed problem with automatically using loos namespace.  LOOS
	clients should either use fully qualified names for things in the
	loos namespace, or add a "using namespase loos" statement.
	* Added HeavySolventSelector to get non-hydrogen water atoms
	* Changed tools to use new convenience functions and factory
	functions.

2008-10-21    <tromo@spade.biophysics.rochester.edu>

	* Updated contacts to use any model filetype and any trajectory type.

2008-10-20    <tromo@spade.biophysics.rochester.edu>

	* Fixed MAJOR bug in DCDWriter that caused output periodic box
	sizes be set to (1,1,1).

2008-10-15    <tromo@spade.biophysics.rochester.edu>

	* Added AtomicGroup::clearBonds() to wipe out connectivity in a group.
	* Fixed problem in writing PDBs with bonds to missing atoms.
	Bonds are now deferenced prior to writing.  NOTE that this now
	means the PDB is no longer const when written and it will be sorted...

2008-10-14    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in width of CONECT record fields
	* Added check in PDB output to not append CONECT records if there
	are atomid's >99999 to prevent field overflow.
	* Added rudimentary support for extracting a Coord<T> from a stream.
	* Fixed bug in DCD trajectories affecting seeking frames
	* Fixed bug in DCD trajectories potentially affecting reading the
	number of frames in a trajectory that comes from NAMD.

2008-09-30    <tromo@spade.biophysics.rochester.edu>

	* Changed AtomicGroup::select() to be a const function
	* Added loos::selectAtoms() to parse a selection string and apply
	it to an AtomicGroup.

2008-09-19    <tromo@spade.biophysics.rochester.edu>

	* Added support for writing out CONECT records for PDBs
	* Fixed bug in Atom::checkProperty() that caused erroneous results

2008-09-08    <tromo@spade.biophysics.rochester.edu>

	* Added autocorrelation function to time-series class (Alan)

	* Added tool to compute probability dbn of radius of gyration (Alan)

	* Changed rmsd2avg tool to rmsd2ref tool since it now supports
	using an external reference structure.

	* Fixed another small bug in iterative alignment that affects
	groups that were not already close to their centroid.

2008-08-11    <tromo@spade.biophysics.rochester.edu>

	* Major reorganization of Trajectory class.  The class now uses a
	template pattern for reading frames in addition to being an
	interface.  This makes it even easier to extend.  See the Docs for
	more details.

	* Added CCPDB class for ConCatenated PDBs.  You can now treat
	these as a Trajectory.

	* Added PDBTraj class for handling non-contiguous PDBs as a
	trajectory.  Provide it with a printf-style format for generating
	frame names and a range of frame numbers to use, and it will allow
	you to access them as a Trajectory.

	* Added TinkerArc class for treating TinkerArc files (concatenated
	XYZ files) as a Trajectory.

	* Fixed problem with namespace collision with Boost in
	Tools/svd.cpp

	* Changed Atom defaults to initialize atomid and resid to 1,
	rather than -1.

2008-08-05    <tromo@spade.biophysics.rochester.edu>

	* Added tool to compute the RMSD between a selection and its
	average structure over the course of a trajectory.

2008-08-04    <tromo@spade.biophysics.rochester.edu>

	= BUGS =
	
	* Fixed problem with LOOS-wide typedefs affecting MacOS 10.5

	* Fixed minor bugin Atom class where setting coordinates using a
	GCoord ref doesn't correctly set the coords-bit,
	i.e. "foo.coords() = c;" will not register that the coords have
	been set.

	* Fixed minor bug in Tools/aligner where the first frame of the
	output DCD was not transformed.

	* Fixed moderate bug in AtomicGroup::splitByMolecule() where the
	PeriodicBox was not propagated beyond the first group split.

	* Fixed moderate bug in Tools/svdcolmap that affected certain
	instances of using atomid maps.

	* Fixed severe bug in loos::iterativeAlignment() where the
	returned vector<XForms> were incorrect.  The passed ensemble of
	AtomicGroups were correctly transformed, but anything that used
	the XForms would be affected to varying degrees.

	= NEW & IMPROVED =
	
	* Added improved self-tests for alignment routines.

	* Added support for log-scaling magnitudes in Tools/svdcolmap.

	* Added a new tool to reimage a DCD by molecule.

	* Added AtomicGroup::apply() to call a functor or function pointer
	on each Atom in an AtomicGroup.

	* Changed dcdwriter so that it no longer requires you to specify
	the number of frames that will be written.  Instead, it will
	automatically update the header with the current number of frames
	and then append the frame to the end of the trajectory.
